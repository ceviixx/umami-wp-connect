name: Package Plugin on Release

on:
  release:
    types: [published]

jobs:
  build-zip:
    name: Build ZIP
    runs-on: ubuntu-latest

    env:
      MAIN_PLUGIN_FILE: umami-connect.php

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Update plugin version
        run: |
          TAG="${{ github.event.release.tag_name }}"
          FILE="${{ env.MAIN_PLUGIN_FILE }}"

          echo "Release tag: $TAG"
          echo "Plugin file: $FILE"

          if [ ! -f "$FILE" ]; then
            echo "File $FILE not found!"
            exit 1
          fi

          if [[ ! "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag name: $TAG (expected format vX.Y.Z)"
            exit 1
          fi

          CURRENT_VERSION=$(grep -E '^ \* Version:' "$FILE" | sed 's/[^0-9.v-]*//g')
          echo "Current version in file: $CURRENT_VERSION"

          if [ "$CURRENT_VERSION" != "$TAG" ]; then
            echo "Updating version in $FILE from $CURRENT_VERSION to $TAG ..."
            sed -i "s/^ \* Version:.*/ * Version: ${TAG}/" "$FILE"
          else
            echo "Version already matches release tag."
          fi

          echo "Preview of updated file:"
          head -n 10 "$FILE"

      - name: Create plugin ZIP (with plugin folder)
        run: |
          mkdir -p output/umami-wp-connect
          cp -r assets output/umami-wp-connect/
          cp -r includes output/umami-wp-connect/
          cp "${{ env.MAIN_PLUGIN_FILE }}" output/umami-wp-connect/
          cd output
          zip -r "umami-wp-connect-${{ github.event.release.tag_name }}.zip" umami-wp-connect

      - name: Upload ZIP to release
        uses: softprops/action-gh-release@v2
        with:
          files: output/umami-wp-connect-${{ github.event.release.tag_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify-discord:
    name: Discord notification
    runs-on: ubuntu-latest
    needs: build-zip
    steps:
      - name: Send release info to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_URL: ${{ github.event.release.html_url }}
          RELEASE_BODY: ${{ github.event.release.body }}
        run: |
          PAYLOAD=$(jq -n \
            --arg title "New Release: $RELEASE_TAG" \
            --arg url "$RELEASE_URL" \
            --arg body "$RELEASE_BODY" \
            '{
              "embeds": [
                {
                  "title": $title,
                  "url": $url,
                  "description": $body,
                  "color": 5814783
                }
              ]
            }'
          )

          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$PAYLOAD" \
               "$DISCORD_WEBHOOK"

          echo "Discord notification sent!"
